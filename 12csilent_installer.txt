#12c Silent installer

#Installing dependent packages
yum-config-manager --enable rhui-REGION-rhel-server-extras rhui-REGION-rhel-server-optional
yum install -y wget
yum install -y unzip
yum install -y libaio
yum install -y glibc*
yum install -y binutils
yum install -y ksh
yum install -y compat-libcap*
yum install -y compat-libstdc++
yum install -y elfutils-libelf-devel
yum install -y gcc-c++
yum install -y libaio-devel
yum install -y libgcc
yum install -y libstdc++
yum install -y unixODBC
yum install -y unixODBC-devel
yum install -y libXi*
yum install -y cpp*
yum install -y elf*
yum install -y smartmontool*
yum install -y xorg-x11-xauth xorg-x11-fonts-* xorg-x11-font-utils xorg-x11-fonts-Type1
rpm -Uvh compat-libstdc++-33-3.2.3-47.3.x86_64.rpm
rpm -Uvh pdksh-5.2.14-30.x86_64.rpm


#Create Oracle user and set the password and need to be change after database creation
useradd oracle
echo Oracle123 | passwd --stdin oracle

#Creating Groups

groupadd dba
groupadd oinstall

#Assigning Oracle user in Primary and secondary groups
usermod -u 1002 -g oinstall -G oinstall,dba oracle

#Sudo Access to oracle
usermod -aG wheel oracle

#Setting the Swap size and mount points

sudo su - 
#The following dd command example creates a swap file with the name oracleswapfile under /root directory with a size of 5120MB (5GB).
dd if=/dev/zero of=/root/oracleswapfile bs=1G count=10
#Change the permission of the swap file so that only root can access it.
chmod 600 /root/oracleswapfile
#Make this file as a swap file using mkswap command.
mkswap /root/oracleswapfile
#Enable the newly created swapfile.
swapon /root/oracleswapfile
#To make this swap file available as a swap area even after the reboot, add the following line to the /etc/fstab file
vi /etc/fstab
                /root/oracleswapfile               swap                    swap    defaults        0 0
#Verification
swapon -s
free –k


file -s /dev/xvdb
file -s /dev/xvdc
cd /
mkdir u01 u02
mkfs -t ext4 /dev/xvdb
mkfs -t ext4 /dev/xvdc
cd /
mount /dev/xvdb u01
mount /dev/xvdc u02

#Access /u01 mount point to oracle user(in root user)

chown oracle:dba /u01 /u02
chmod -R 755 /u01 /u02

#Adjust the Kernel level parameters as required



kernel.msgmnb = 65536
kernel.msgmax = 65536
kernel.shmmax = 68719476736
kernel.shmall = 4294967296
kernel.sem = 256 32000 100 142
kernel.shmall = 2097152
kernel.shmmax = 68719476736
kernel.shmmni = 4096
kernel.msgmax = 8192
kernel.msgmnb = 65535
kernel.msgmni = 2878
fs.file-max = 6815744
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576
fs.aio-max-nr = 1048576 


/* echo "kernel.shmall = 2097152" >> /etc/sysctl.conf
echo "fs.file-max = 6815744" >> /etc/sysctl.conf
echo "net.ipv4.ip_local_port_range = 9000 65500" >> /etc/sysctl.conf
echo "net.core.rmem_default = 262144" >> /etc/sysctl.conf
echo "net.core.wmem_default = 262144" >> /etc/sysctl.conf
echo "net.core.rmem_max = 4194304" >> /etc/sysctl.conf
echo "net.core.wmem_max = 1048576" >> /etc/sysctl.conf
echo "fs.aio-max-nr = 1048576" >> /etc/sysctl.conf
echo "kernel.sem = 250 32000 100 128" >> /etc/sysctl.conf
echo "kernel.shmmax = 4294967295" >> /etc/sysctl.conf
echo "kernel.shmmni = 4096" >> /etc/sysctl.conf */
echo "oracle soft nproc 2047" >> /etc/security/limits.conf
echo "oracle hard nproc 16384" >> /etc/security/limits.conf
echo "oracle soft nofile 1024" >> /etc/security/limits.conf
echo "oracle hard nofile 65536" >> /etc/security/limits.conf
echo "oracle soft stack 10240" >> /etc/security/limits.conf
#echo "/dev/xvdb      none    swap    sw  0       0" >>  /etc/fstab
echo "/dev/xvdb         /u01    ext4    defaults,nofail        0       2" >> /etc/fstab
echo "/dev/xvdc        /u02    ext4    defaults,nofail        0       2" >> /etc/fstab
echo 'if [ $USER = "oracle" ]; then
    if [ $SHELL = "/bin/ksh" ]; then
       ulimit -u 16384
       ulimit -n 65536
    else
       ulimit -u 16384 -n 65536
    fi
fi' >> /etc/profile


sysctl -p


#Download the oracle installers
cd /u01

curl -H 'X-JFrog-Art-Api: ********' -O "https://sgn.jfrog.io/sgn/SGN-App-Softwares/oracle/linuxx64_12201_database.zip"

#Unzip the oracle installers
unzip linuxx64_12201_database.zip

chown -R oracle:dba /u01/database

#running silent installation ---- should run as oracle user -----
sudo -S su - oracle -c "/u01/database/runInstaller -silent -waitForCompletion -debug -force \
FROM_LOCATION=/u01/database/stage/products.xml \
oracle.install.option=INSTALL_DB_SWONLY \
UNIX_GROUP_NAME=oinstall \
INVENTORY_LOCATION=/u01/app/oraInventory \
ORACLE_HOME=/u01/app/oracle/product/12.2.0.1/dbhome_1 \
ORACLE_HOME_NAME="OraDb12c_Home1" \
ORACLE_BASE=/u01/app/oracle \
oracle.install.db.InstallEdition=EE \
oracle.install.db.isCustomInstall=false \
oracle.install.db.DBA_GROUP=dba \
oracle.install.db.OPER_GROUP=dba \
oracle.install.db.OSBACKUPDBA_GROUP=dba \
oracle.install.db.OSDGDBA_GROUP=dba \
oracle.install.db.OSKMDBA_GROUP=dba \
oracle.install.db.OSRACDBA_GROUP=dba \
DECLINE_SECURITY_UPDATES=true"


#Running the scripts as root user
echo "running scripts as root user"

id
/u01/app/oraInventory/orainstRoot.sh
/u01/app/oracle/product/12.2.0.1/dbhome_1/root.sh

#finished running script as root without this option the script was not able to run next steps in the script
