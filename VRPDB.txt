Endpoint : esol-qvrp-nonprd.c8gpfloe5wgu.eu-west-1.rds.amazonaws.com
Master user : admin/Qf96HmknkozPGXI
DB Name : QVRP	
Port : 1521

select username,default_tablespace,temporary_tablespace,profile from dba_users where username in ('VRP_LEGAL_USER','VRP_ADMIN');


select owner, object_type,status, count(*) from dba_objects where owner in ('VRP_LEGAL_USER') group by owner,object_type,status order by 3 desc;
CREATE TABLESPACE LEGAL_DATA_TDE DATAFILE SIZE 10G AUTOEXTEND ON NEXT 5G maxsize unlimited; 
ALTER TABLESPACE USERS AUTOEXTEND ON NEXT 10G MAXSIZE unlimited;


GRANT UNLIMITED TABLESPACE TO VRP_LEGAL_USER;

ALTER USER "VRP_LEGAL_USER" QUOTA UNLIMITED ON LEGAL_DATA_TDE;



SELECT dbms_metadata.get_ddl('FUNCTION','VODACOM_PVF_2019_SYSTEM') "DDL" FROM dual;

begin
    rdsadmin.rdsadmin_password_verify.create_verify_function(
        p_verify_function_name            => 'VODACOM_VERIFY_2019_SYSTEM', 
        p_min_length                      => 16,
		p_min_letters                     => 1,
		p_min_different_chars             => 4,
		p_min_lowercase					  => 1,
		p_min_uppercase					  => 1,
		p_min_special					  => 1,
		p_disallow_username               => True,
		p_disallow_reverse                => True,
		p_disallow_db_name                => True,
		p_disallow_simple_strings         => True,
        p_min_digits                      => 1);
end;
/	



SQL> SELECT dbms_metadata.get_ddl('PROFILE','VODA_NONEXPIRY') "DDL" FROM dual;

DDL
--------------------------------------------------------------------------------

   CREATE PROFILE "VODA_NONEXPIRY"
    LIMIT
         COMPOSITE_LIMIT DEFAULT
         SESSIONS_PER_USER DEFAULT
         CPU_PER_SESSION DEFAULT
         CPU_PER_CALL DEFAULT
         LOGICAL_READS_PER_SESSION DEFAULT
         LOGICAL_READS_PER_CALL DEFAULT
         IDLE_TIME DEFAULT
         CONNECT_TIME DEFAULT
         PRIVATE_SGA DEFAULT
         FAILED_LOGIN_ATTEMPTS 5
         PASSWORD_LIFE_TIME 31536000/86400
         PASSWORD_REUSE_TIME 31536000/86400
         PASSWORD_REUSE_MAX 6
         PASSWORD_VERIFY_FUNCTION "VODACOM_VERIFY_2019_SYSTEM"
         PASSWORD_LOCK_TIME UNLIMITED
         PASSWORD_GRACE_TIME UNLIMITED
         INACTIVE_ACCOUNT_TIME DEFAULT;
		 
		 
create public DATABASE LINK QVRP connect to admin identified by Qf96HmknkozPGXI using 
'(DESCRIPTION = (ADDRESS = (PROTOCOL = TCP)(HOST = esol-qvrp-nonprd.c8gpfloe5wgu.eu-west-1.rds.amazonaws.com)(PORT = 1521)) (CONNECT_DATA = (SID = QVRP)))'; 

		
expdp \"/ as sysdba\"  dumpfile=rds_mig:QVRP_EXPDP_FULL_091120.dmp logfile=rds_mig:QVRP_EXPDP_FULL_091120.log schemas=VRP_LEGAL_USER metrics=y EXCLUDE=STATISTICS compression=all cluster=n

expdp \"/ as sysdba\"  dumpfile=rds_mig:QVRP_EXPDP_VRP_091120.dmp logfile=rds_mig:QVRP_EXPDP_VRP_091120.log schemas=VRP_ADMIN metrics=y EXCLUDE=STATISTICS compression=all cluster=n

BEGIN
DBMS_FILE_TRANSFER.PUT_FILE(
source_directory_object       => 'rds_mig',
source_file_name              => 'QVRP_EXPDP_VRP_091120.dmp',
destination_directory_object  => 'DATA_PUMP_DIR',
destination_file_name         => 'QVRP_EXPDP_VRP_091120.dmp',
destination_database          => 'QVRP' 
);
END;
/ 





DECLARE
hdnl NUMBER;
BEGIN
hdnl := DBMS_DATAPUMP.OPEN( operation => 'IMPORT', job_mode => 'SCHEMA', job_name=>null);
DBMS_DATAPUMP.ADD_FILE( handle => hdnl, filename => 'QVRP_EXPDP_FULL_091120.dmp', directory => 'DATA_PUMP_DIR', filetype => dbms_datapump.ku$_file_type_dump_file);
DBMS_DATAPUMP.ADD_FILE( handle => hdnl, filename => 'QVRP_IMPDP_FULL_091120.log', directory => 'DATA_PUMP_DIR', filetype => dbms_datapump.ku$_file_type_log_file);
DBMS_DATAPUMP.SET_PARALLEL(handle => hdnl,degree => 25 );
dbms_datapump.Metadata_filter(handle => hdnl, name => 'SCHEMA_EXPR', value => 'IN (''VRP_LEGAL_USER'')');
dbms_datapump.Set_parameter(handle => hdnl, name => 'INCLUDE_METADATA', value => 1);
dbms_datapump.metadata_transform (handle => hdnl, name => 'DISABLE_ARCHIVE_LOGGING',value => 1 ,object_type => 'TABLE');
dbms_datapump.set_parameter(handle => hdnl, name => 'METRICS', VALUE => 1);
DBMS_DATAPUMP.START_JOB(hdnl);
END;
/


DECLARE
hdnl NUMBER;
BEGIN
hdnl := DBMS_DATAPUMP.OPEN( operation => 'IMPORT', job_mode => 'SCHEMA', job_name=>null);
DBMS_DATAPUMP.ADD_FILE( handle => hdnl, filename => 'QVRP_EXPDP_VRP_091120.dmp', directory => 'DATA_PUMP_DIR', filetype => dbms_datapump.ku$_file_type_dump_file);
DBMS_DATAPUMP.ADD_FILE( handle => hdnl, filename => 'QVRP_IMPDP_VRP_091120.log', directory => 'DATA_PUMP_DIR', filetype => dbms_datapump.ku$_file_type_log_file);
DBMS_DATAPUMP.SET_PARALLEL(handle => hdnl,degree => 3 );
dbms_datapump.Metadata_filter(handle => hdnl, name => 'SCHEMA_EXPR', value => 'IN (''VRP_ADMIN'')');
dbms_datapump.Set_parameter(handle => hdnl, name => 'INCLUDE_METADATA', value => 1);
dbms_datapump.metadata_transform (handle => hdnl, name => 'DISABLE_ARCHIVE_LOGGING',value => 1 ,object_type => 'TABLE');
dbms_datapump.set_parameter(handle => hdnl, name => 'METRICS', VALUE => 1);
DBMS_DATAPUMP.START_JOB(hdnl);
END;
/
		 

GRANT CREATE TRIGGER TO VRP_ADMIN;
GRANT CREATE PROCEDURE TO VRP_ADMIN;
GRANT CREATE SEQUENCE TO VRP_ADMIN;
GRANT CREATE SYNONYM TO VRP_ADMIN;
GRANT CREATE SESSION TO VRP_ADMIN;
GRANT CREATE VIEW TO VRP_ADMIN;
GRANT CREATE TABLE TO VRP_ADMIN;
GRANT SELECT ANY DICTIONARY TO VRP_ADMIN;

GRANT UPDATE ANY CUBE DIMENSION TO VRP_LEGAL_USER;
GRANT SELECT ANY MINING MODEL TO VRP_LEGAL_USER;
GRANT ALTER ANY ASSEMBLY TO VRP_LEGAL_USER;
GRANT GRANT ANY OBJECT PRIVILEGE TO VRP_LEGAL_USER;
GRANT DROP ANY INDEXTYPE TO VRP_LEGAL_USER;
GRANT ALTER ANY LIBRARY TO VRP_LEGAL_USER;
GRANT DROP ANY TYPE TO VRP_LEGAL_USER;
GRANT DROP ANY DIRECTORY TO VRP_LEGAL_USER;
GRANT DROP ANY TRIGGER TO VRP_LEGAL_USER;
GRANT DROP PUBLIC SYNONYM TO VRP_LEGAL_USER;
GRANT CREATE ANY TABLE TO VRP_LEGAL_USER;

GRANT CREATE TABLE TO VRP_LEGAL_USER;
GRANT CREATE TABLESPACE TO VRP_LEGAL_USER;
GRANT ALTER PUBLIC DATABASE LINK TO VRP_LEGAL_USER;
GRANT SELECT ANY TRANSACTION TO VRP_LEGAL_USER;
GRANT CREATE JOB TO VRP_LEGAL_USER;
GRANT DROP ANY DIMENSION TO VRP_LEGAL_USER;
GRANT CREATE ANY MATERIALIZED VIEW TO VRP_LEGAL_USER;
GRANT ALTER PROFILE TO VRP_LEGAL_USER;
GRANT CREATE DATABASE LINK TO VRP_LEGAL_USER;
GRANT ALTER ANY SEQUENCE TO VRP_LEGAL_USER;
GRANT LOCK ANY TABLE TO VRP_LEGAL_USER;

GRANT ALTER ROLLBACK SEGMENT TO VRP_LEGAL_USER;
GRANT CREATE USER TO VRP_LEGAL_USER;
GRANT CREATE ANY CUBE TO VRP_LEGAL_USER;
GRANT EXECUTE ANY CLASS TO VRP_LEGAL_USER;
GRANT CREATE ANY DIRECTORY TO VRP_LEGAL_USER;
GRANT DROP PROFILE TO VRP_LEGAL_USER;
GRANT CREATE ANY PROCEDURE TO VRP_LEGAL_USER;
GRANT SELECT ANY SEQUENCE TO VRP_LEGAL_USER;
GRANT UPDATE ANY TABLE TO VRP_LEGAL_USER;
GRANT BECOME USER TO VRP_LEGAL_USER;
GRANT DROP ANY MINING MODEL TO VRP_LEGAL_USER;

GRANT CREATE ANY SQL PROFILE TO VRP_LEGAL_USER;
GRANT DROP ANY SQL PROFILE TO VRP_LEGAL_USER;
GRANT ADVISOR TO VRP_LEGAL_USER;
GRANT ALTER ANY INDEXTYPE TO VRP_LEGAL_USER;
GRANT CREATE OPERATOR TO VRP_LEGAL_USER;
GRANT CREATE ANY LIBRARY TO VRP_LEGAL_USER;
GRANT CREATE LIBRARY TO VRP_LEGAL_USER;
GRANT CREATE VIEW TO VRP_LEGAL_USER;
GRANT INSERT ANY TABLE TO VRP_LEGAL_USER;
GRANT ALTER ANY EDITION TO VRP_LEGAL_USER;
GRANT EXEMPT IDENTITY POLICY TO VRP_LEGAL_USER;

GRANT FLASHBACK ANY TABLE TO VRP_LEGAL_USER;
GRANT DROP ANY OPERATOR TO VRP_LEGAL_USER;
GRANT ALTER DATABASE TO VRP_LEGAL_USER;
GRANT CREATE ANY SEQUENCE TO VRP_LEGAL_USER;
GRANT ALTER ANY INDEX TO VRP_LEGAL_USER;
GRANT CREATE CLUSTER TO VRP_LEGAL_USER;
GRANT SELECT ANY TABLE TO VRP_LEGAL_USER;
GRANT ALTER ANY TABLE TO VRP_LEGAL_USER;
GRANT DROP USER TO VRP_LEGAL_USER;
GRANT ALTER TABLESPACE TO VRP_LEGAL_USER;
GRANT ADMINISTER SQL MANAGEMENT OBJECT TO VRP_LEGAL_USER;

GRANT EXECUTE ASSEMBLY TO VRP_LEGAL_USER;
GRANT CREATE ANY OUTLINE TO VRP_LEGAL_USER;
GRANT CREATE ANY DIMENSION TO VRP_LEGAL_USER;
GRANT EXECUTE ANY OPERATOR TO VRP_LEGAL_USER;
GRANT CREATE ANY OPERATOR TO VRP_LEGAL_USER;
GRANT ALTER ANY TRIGGER TO VRP_LEGAL_USER;
GRANT CREATE PROCEDURE TO VRP_LEGAL_USER;
GRANT CREATE ANY VIEW TO VRP_LEGAL_USER;
GRANT CREATE SESSION TO VRP_LEGAL_USER;
GRANT UPDATE ANY CUBE TO VRP_LEGAL_USER;
GRANT SELECT ANY CUBE TO VRP_LEGAL_USER;

GRANT ALTER ANY CUBE TO VRP_LEGAL_USER;
GRANT ALTER ANY MINING MODEL TO VRP_LEGAL_USER;
GRANT ON COMMIT REFRESH TO VRP_LEGAL_USER;
GRANT EXECUTE ANY INDEXTYPE TO VRP_LEGAL_USER;
GRANT CREATE ANY TRIGGER TO VRP_LEGAL_USER;
GRANT FORCE ANY TRANSACTION TO VRP_LEGAL_USER;
GRANT CREATE SEQUENCE TO VRP_LEGAL_USER;
GRANT CREATE ANY INDEX TO VRP_LEGAL_USER;
GRANT DROP TABLESPACE TO VRP_LEGAL_USER;
GRANT CREATE ANY CUBE BUILD PROCESS TO VRP_LEGAL_USER;
GRANT CREATE MINING MODEL TO VRP_LEGAL_USER;

GRANT CREATE ASSEMBLY TO VRP_LEGAL_USER;
GRANT CREATE EXTERNAL JOB TO VRP_LEGAL_USER;
GRANT CHANGE NOTIFICATION TO VRP_LEGAL_USER;
GRANT ADMINISTER ANY SQL TUNING SET TO VRP_LEGAL_USER;
GRANT ANALYZE ANY DICTIONARY TO VRP_LEGAL_USER;
GRANT DEBUG CONNECT SESSION TO VRP_LEGAL_USER;
GRANT EXECUTE ANY TYPE TO VRP_LEGAL_USER;
GRANT CREATE TRIGGER TO VRP_LEGAL_USER;
GRANT DROP ROLLBACK SEGMENT TO VRP_LEGAL_USER;
GRANT MANAGE TABLESPACE TO VRP_LEGAL_USER;
